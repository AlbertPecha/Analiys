import tkinter as tk
import requests

def get_team_stats(team_name):
    api_key = "TU_API_KEY"  # Reemplaza esto con tu propia clave de API de League of Legends

    # Realizar solicitud a la API para obtener las estadísticas del equipo rival
    url = f"https://api.lol/teams/{team_name}?api_key={api_key}"
    response = requests.get(url)
    if response.status_code == 200:
        team_stats = response.json()
        return team_stats
    else:
        return None

def analyze_team():
    team_name = team_entry.get()
    team_stats = get_team_stats(team_name)

    if team_stats:
        # Mostrar información del equipo rival en la interfaz
        kills_label.config(text=f"Kills: {team_stats['kills']}")
        assists_label.config(text=f"Asistencias: {team_stats['assists']}")
        gold_label.config(text=f"Oro: {team_stats['gold']}")
        objectives_label.config(text=f"Objetivos: {team_stats['objectives']}")
        # ... Agrega más etiquetas según las estadísticas que desees mostrar

        status_label.config(text="Análisis completado.")
    else:
        status_label.config(text="Error al obtener información del equipo.")

# Crear la ventana principal
window = tk.Tk()
window.title("Scouting de Equipo Rival")
window.geometry("300x300")

# Crear etiquetas para mostrar las estadísticas
kills_label = tk.Label(window, text="Kills: ")
kills_label.pack()

assists_label = tk.Label(window, text="Asistencias: ")
assists_label.pack()

gold_label = tk.Label(window, text="Oro: ")
gold_label.pack()

objectives_label = tk.Label(window, text="Objetivos: ")
objectives_label.pack()

# ... Agrega más etiquetas según las estadísticas que desees mostrar

status_label = tk.Label(window, text="")
status_label.pack()

# Crear entrada de texto para ingresar el nombre del equipo rival
team_entry = tk.Entry(window)
team_entry.pack()

# Crear botón para realizar el análisis del equipo
analyze_button = tk.Button(window, text="Analizar", command=analyze_team)
analyze_button.pack()

# Ejecutar la ventana principal
window.mainloop()
